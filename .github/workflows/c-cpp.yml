name: C/C++ CI

on:
  push:
    branches: [ "latest" ]
  pull_request:
    branches: [ "latest" ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up CMake
      uses: jwlawson/actions-setup-cmake@v1
      with:
        cmake-version: '3.21.2' # Specify the CMake version you need

    - name: Configure
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build --config Release

    - name: Run Tests
      run: ctest --test-dir build --output-on-failure

    - name: Package
      run: cpack --config build/CPackConfig.cmake

    # Step: Check for Merge Conflicts
    - name: Check for Merge Conflicts
      id: conflict_check
      run: |
        if [ -n "$(git diff --name-only --diff-filter=U)" ]; then
          echo "Merge conflicts detected!" >&2
          exit 1
        else
          echo "No merge conflicts."
        fi

    # Step: Attempt to Resolve Merge Conflicts
    - name: Attempt to Resolve Merge Conflicts
      if: steps.conflict_check.outcome == 'failure'
      run: |
        echo "Attempting to resolve merge conflicts..."
        
        # Resolve merge conflicts automatically
        git checkout --theirs .
        
        # Stage resolved files
        git add .
        
        # Commit the resolved files
        git commit -m "Automatically resolved merge conflicts"
        
        echo "Merge conflicts resolved."

    # Step: Re-run Build and Tests after resolving conflicts
    - name: Re-run Build and Tests
      if: steps.conflict_check.outcome == 'failure'
      run: |
        cmake -S . -B build
        cmake --build build --config Release
        ctest --test-dir build --output-on-failure
